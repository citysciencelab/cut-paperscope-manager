/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	#include "MainMenu.h"

	// App
	#include "../../global/Settings.h"



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CONSTRUCTOR
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	MainMenu::MainMenu(QWidget *parent)
		: QMenuBar(parent),
		  settingsMenu(nullptr),
		  loadAction(nullptr),
		  saveAction(nullptr)
	{

		// init member
		initSettingsMenu();
	}


	MainMenu::~MainMenu() {

		delete settingsMenu;
		delete loadAction;
		delete saveAction;
	}



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	SETTINGS
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	void MainMenu::initSettingsMenu() {

		// settings menu
		settingsMenu = new QMenu("Settings",this);
		addMenu(settingsMenu);
		
		// save action
		saveAction = new QAction("Save settings", this);
		saveAction->setShortcut(QKeySequence::Save);
		settingsMenu->addAction(saveAction);
        connect(saveAction, &QAction::triggered, Settings::instance(), &Settings::save);

		// load action
		loadAction = new QAction("Load settings", this);
		loadAction->setShortcut(QKeySequence::Open);
		settingsMenu->addAction(loadAction);
        connect(loadAction, &QAction::triggered, Settings::instance(), &Settings::load);
	}

