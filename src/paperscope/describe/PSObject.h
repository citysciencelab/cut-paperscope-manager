/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	INCLUDES
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */


	#pragma once

	// OpenCV
	#include <opencv2/opencv.hpp>

	// App
	#include "../detect/PSShapeType.h"



/*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	CLASS DECLARATION
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */



class PSObject {
	
	public:
		
		PSObject(std::vector<cv::Point> candidatePoints, PSShapeType shapeType, cv::Mat *matTracking, cv::Mat *matRender);

		// properties
		std::string uid;
		std::vector<cv::Point> candidatePoints;
		std::vector<cv::Point2f> points;

		// tracking
		bool isSame(std::vector<cv::Point> targetPoints, PSShapeType targetShape);
		int confidence;

		// contour
		PSShapeType shapeType;
		void drawContour();

		// color detection
		int colorIndex;
		cv::Scalar avgColor;
		void detectColor();
		void drawColor();
		std::vector< std::vector<cv::Scalar> > getColorCandidates();

	
	private:

		// paperscope
		cv::Mat *matTracking;
		cv::Mat *matRender;
};

